{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vebj\\xF8rn\\\\Documents\\\\Monday\\\\quickstart-react\\\\src\\\\App.js\";\nimport React, { createElement } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport Matter from \"matter-js\";\nconst monday = mondaySdk();\nvar completed = [];\nvar completed_state = \"Done\"; // module aliases\n\nvar Engine = Matter.Engine,\n    Render = Matter.Render,\n    World = Matter.World,\n    Bodies = Matter.Bodies,\n    Body = Matter.Body,\n    Events = Matter.Events,\n    Runner = Matter.Runner,\n    MouseConstraint = Matter.MouseConstraint,\n    Mouse = Matter.Mouse;\nvar engine, render, runner;\nvar crates = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      settings: {\n        completed_state: \"Done\"\n      },\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    engine = Engine.create();\n    runner = Runner.create(); // create a renderer\n\n    render = Render.create({\n      element: this.refs.launch_site,\n      engine: engine,\n      options: {\n        hasBounds: true,\n        wireframes: false,\n        background: '#fff',\n        showIds: true,\n        width: window.innerWidth,\n        height: window.innerHeight - 100\n      }\n    });\n    var ground = Bodies.rectangle(window.innerWidth / 2 - 250, window.innerHeight - 100, window.innerWidth + 500, 20, {\n      isStatic: true,\n      render: {\n        fillStyle: '#fff'\n      }\n    });\n    var mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(engine, {\n      mouse: mouse,\n      constraint: {\n        stiffness: 0.2,\n        render: {\n          visible: false\n        }\n      }\n    });\n    World.add(engine.world, [ground, mouseConstraint]);\n    Engine.run(engine);\n    Render.run(render); // an example of using mouse events on a mouse\n\n    Events.on(mouseConstraint, 'mousedown', function (event) {\n      var mousePosition = event.mouse.position;\n      var cratesUnderMouse = Matter.Query.point(crates, {\n        x: mousePosition.x,\n        y: mousePosition.y\n      });\n\n      for (let i in cratesUnderMouse) {\n        alert(cratesUnderMouse[i].id);\n      }\n    });\n    Events.on(runner, 'tick', function (event) {\n      alert(\"djgdøkfjgn\");\n    }); //Load boards listener\n\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n        this.loadCompleted();\n      });\n    }); // Settings changed listener\n\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n      completed_state = this.state.settings.completed_state;\n      this.loadCompleted();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      ref: \"launch_site\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"launchDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"launchTitle\",\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: moveCrates,\n      className: \"launchButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Launch now\")));\n  }\n  /** Loads completed items into the completed array */\n\n\n  loadCompleted() {\n    completed = [];\n\n    for (let i in this.state.boardData.boards) {\n      for (let j in this.state.boardData.boards[i].items) {\n        var itemName = this.state.boardData.boards[i].items[j].name;\n\n        for (let k in this.state.boardData.boards[i].items[j].column_values) {\n          if (this.state.boardData.boards[i].items[j].column_values[k].text === completed_state) {\n            completed[completed.length] = itemName;\n          }\n        }\n      }\n    }\n\n    document.getElementById(\"title\").innerHTML = completed.length + \" items ready to launch!\";\n    this.createBoxes();\n  }\n  /** Creates crates based on data in the completed array */\n\n\n  createBoxes() {\n    for (let i in crates) {\n      World.remove(engine.world, crates[i]);\n    }\n\n    crates = [];\n\n    for (let i in completed) {\n      let x = getRandomNumber(200, 400);\n      let y = getRandomNumber(50, 400);\n      let size = getRandomNumber(50, 80);\n      let spriteNumber = getRandomNumber(1, 8);\n      let crate = Bodies.rectangle(x, y, size, size, {\n        render: {\n          sprite: {\n            texture: 'sprites/crate_1.png',\n            xScale: 50,\n            yScale: 50\n          }\n        },\n        id: completed[i]\n      });\n      World.add(engine.world, [crate]);\n      crates[crates.length] = crate;\n    }\n  }\n\n}\n\nfunction getRandomNumber(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction moveCrates() {\n  for (let i in crates) {\n    let crate = crates[i];\n    Body.applyForce(crate, {\n      x: -100,\n      y: window.innerHeight + 100\n    }, {\n      x: 0.3,\n      y: -0.35\n    });\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Vebjørn/Documents/Monday/quickstart-react/src/App.js"],"names":["React","createElement","mondaySdk","Matter","monday","completed","completed_state","Engine","Render","World","Bodies","Body","Events","Runner","MouseConstraint","Mouse","engine","render","runner","crates","App","Component","constructor","props","state","settings","name","componentDidMount","create","element","refs","launch_site","options","hasBounds","wireframes","background","showIds","width","window","innerWidth","height","innerHeight","ground","rectangle","isStatic","fillStyle","mouse","canvas","mouseConstraint","constraint","stiffness","visible","add","world","run","on","event","mousePosition","position","cratesUnderMouse","Query","point","x","y","i","alert","id","listen","res","setState","context","data","api","variables","boardIds","then","boardData","loadCompleted","moveCrates","boards","j","items","itemName","k","column_values","text","length","document","getElementById","innerHTML","createBoxes","remove","getRandomNumber","size","spriteNumber","crate","sprite","texture","xScale","yScale","min","max","Math","random","applyForce"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,IAAIG,SAAS,GAAG,EAAhB;AACA,IAAIC,eAAe,GAAG,MAAtB,C,CAEA;;AACA,IAAIC,MAAM,GAAGJ,MAAM,CAACI,MAApB;AAAA,IACAC,MAAM,GAAGL,MAAM,CAACK,MADhB;AAAA,IAEAC,KAAK,GAAGN,MAAM,CAACM,KAFf;AAAA,IAGAC,MAAM,GAAGP,MAAM,CAACO,MAHhB;AAAA,IAIAC,IAAI,GAAGR,MAAM,CAACQ,IAJd;AAAA,IAKAC,MAAM,GAAGT,MAAM,CAACS,MALhB;AAAA,IAMAC,MAAM,GAAGV,MAAM,CAACU,MANhB;AAAA,IAOAC,eAAe,GAAGX,MAAM,CAACW,eAPzB;AAAA,IAQAC,KAAK,GAAGZ,MAAM,CAACY,KARf;AAUA,IAAIC,MAAJ,EACAC,MADA,EAEAC,MAFA;AAIA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,GAAN,SAAkBpB,KAAK,CAACqB,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AACNnB,QAAAA,eAAe,EAAE;AADX,OADD;AAIToB,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhBX,IAAAA,MAAM,GAAGT,MAAM,CAACqB,MAAP,EAAT;AACAV,IAAAA,MAAM,GAAGL,MAAM,CAACe,MAAP,EAAT,CAHgB,CAKhB;;AACAX,IAAAA,MAAM,GAAGT,MAAM,CAACoB,MAAP,CAAc;AACnBC,MAAAA,OAAO,EAAE,KAAKC,IAAL,CAAUC,WADA;AAEnBf,MAAAA,MAAM,EAAEA,MAFW;AAGnBgB,MAAAA,OAAO,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,UAAU,EAAE,MAHP;AAILC,QAAAA,OAAO,EAAE,IAJJ;AAKLC,QAAAA,KAAK,EAAEC,MAAM,CAACC,UALT;AAMLC,QAAAA,MAAM,EAAEF,MAAM,CAACG,WAAP,GAAqB;AANxB;AAHU,KAAd,CAAT;AAcA,QAAIC,MAAM,GAAGhC,MAAM,CAACiC,SAAP,CAAiBL,MAAM,CAACC,UAAP,GAAoB,CAApB,GAAwB,GAAzC,EAA8CD,MAAM,CAACG,WAAP,GAAqB,GAAnE,EAAwEH,MAAM,CAACC,UAAP,GAAoB,GAA5F,EAAiG,EAAjG,EAAqG;AAC9GK,MAAAA,QAAQ,EAAE,IADoG;AAE9G3B,MAAAA,MAAM,EAAE;AAAE4B,QAAAA,SAAS,EAAE;AAAb;AAFsG,KAArG,CAAb;AAKA,QAAIC,KAAK,GAAG/B,KAAK,CAACa,MAAN,CAAaX,MAAM,CAAC8B,MAApB,CAAZ;AAAA,QACAC,eAAe,GAAGlC,eAAe,CAACc,MAAhB,CAAuBZ,MAAvB,EAA+B;AAC7C8B,MAAAA,KAAK,EAAEA,KADsC;AAE7CG,MAAAA,UAAU,EAAE;AACRC,QAAAA,SAAS,EAAE,GADH;AAERjC,QAAAA,MAAM,EAAE;AACJkC,UAAAA,OAAO,EAAE;AADL;AAFA;AAFiC,KAA/B,CADlB;AAWA1C,IAAAA,KAAK,CAAC2C,GAAN,CAAUpC,MAAM,CAACqC,KAAjB,EAAwB,CAACX,MAAD,EAASM,eAAT,CAAxB;AACAzC,IAAAA,MAAM,CAAC+C,GAAP,CAAWtC,MAAX;AACAR,IAAAA,MAAM,CAAC8C,GAAP,CAAWrC,MAAX,EAtCgB,CAyChB;;AACAL,IAAAA,MAAM,CAAC2C,EAAP,CAAUP,eAAV,EAA2B,WAA3B,EAAwC,UAASQ,KAAT,EAAgB;AACpD,UAAIC,aAAa,GAAGD,KAAK,CAACV,KAAN,CAAYY,QAAhC;AACA,UAAIC,gBAAgB,GAAGxD,MAAM,CAACyD,KAAP,CAAaC,KAAb,CAAmB1C,MAAnB,EAA2B;AAAC2C,QAAAA,CAAC,EAAEL,aAAa,CAACK,CAAlB;AAAqBC,QAAAA,CAAC,EAAEN,aAAa,CAACM;AAAtC,OAA3B,CAAvB;;AACA,WAAK,IAAIC,CAAT,IAAcL,gBAAd,EAAgC;AAC5BM,QAAAA,KAAK,CAACN,gBAAgB,CAACK,CAAD,CAAhB,CAAoBE,EAArB,CAAL;AACH;AACJ,KAND;AAQAtD,IAAAA,MAAM,CAAC2C,EAAP,CAAUrC,MAAV,EAAkB,MAAlB,EAA0B,UAASsC,KAAT,EAAgB;AACtCS,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH,KAFD,EAlDgB,CAsDhB;;AACC7D,IAAAA,MAAM,CAAC+D,MAAP,CAAc,SAAd,EAAyBC,GAAG,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAd,OAAd;AAEAnE,MAAAA,MAAM,CAACoE,GAAP,CAAY,0GAAZ,EACE;AAAEC,QAAAA,SAAS,EAAE;AAACC,UAAAA,QAAQ,EAAE,KAAKlD,KAAL,CAAW8C,OAAX,CAAmBI;AAA9B;AAAb,OADF,EAICC,IAJD,CAIMP,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAACO,UAAAA,SAAS,EAAER,GAAG,CAACG;AAAhB,SAAd;AACA,aAAKM,aAAL;AACH,OAPD;AAQD,KAXF,EAvDe,CAoEhB;;AACAzE,IAAAA,MAAM,CAAC+D,MAAP,CAAc,UAAd,EAA0BC,GAAG,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAE5C,QAAAA,QAAQ,EAAE2C,GAAG,CAACG;AAAhB,OAAd;AACAjE,MAAAA,eAAe,GAAG,KAAKkB,KAAL,CAAWC,QAAX,CAAoBnB,eAAtC;AAEC,WAAKuE,aAAL;AACJ,KALD;AAMH;;AAED5D,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAA2B,MAAA,EAAE,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,OAAO,EAAE6D,UAAjB;AAA6B,MAAA,SAAS,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADG,CAAP;AAMH;AAED;;;AACAD,EAAAA,aAAa,GAAG;AAEZxE,IAAAA,SAAS,GAAG,EAAZ;;AACA,SAAK,IAAI2D,CAAT,IAAc,KAAKxC,KAAL,CAAWoD,SAAX,CAAqBG,MAAnC,EAA2C;AACvC,WAAK,IAAIC,CAAT,IAAc,KAAKxD,KAAL,CAAWoD,SAAX,CAAqBG,MAArB,CAA4Bf,CAA5B,EAA+BiB,KAA7C,EAAoD;AAEhD,YAAIC,QAAQ,GAAG,KAAK1D,KAAL,CAAWoD,SAAX,CAAqBG,MAArB,CAA4Bf,CAA5B,EAA+BiB,KAA/B,CAAqCD,CAArC,EAAwCtD,IAAvD;;AAEA,aAAK,IAAIyD,CAAT,IAAc,KAAK3D,KAAL,CAAWoD,SAAX,CAAqBG,MAArB,CAA4Bf,CAA5B,EAA+BiB,KAA/B,CAAqCD,CAArC,EAAwCI,aAAtD,EAAqE;AACjE,cAAI,KAAK5D,KAAL,CAAWoD,SAAX,CAAqBG,MAArB,CAA4Bf,CAA5B,EAA+BiB,KAA/B,CAAqCD,CAArC,EAAwCI,aAAxC,CAAsDD,CAAtD,EAAyDE,IAAzD,KAAkE/E,eAAtE,EAAuF;AAEnFD,YAAAA,SAAS,CAACA,SAAS,CAACiF,MAAX,CAAT,GAA8BJ,QAA9B;AACH;AACJ;AACJ;AACJ;;AACDK,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CpF,SAAS,CAACiF,MAAV,GAAmB,yBAAhE;AACA,SAAKI,WAAL;AACH;AAED;;;AACAA,EAAAA,WAAW,GAAG;AACV,SAAK,IAAI1B,CAAT,IAAc7C,MAAd,EAAsB;AAClBV,MAAAA,KAAK,CAACkF,MAAN,CAAa3E,MAAM,CAACqC,KAApB,EAA2BlC,MAAM,CAAC6C,CAAD,CAAjC;AACH;;AACD7C,IAAAA,MAAM,GAAG,EAAT;;AACA,SAAK,IAAI6C,CAAT,IAAc3D,SAAd,EAAyB;AAErB,UAAIyD,CAAC,GAAG8B,eAAe,CAAC,GAAD,EAAM,GAAN,CAAvB;AACA,UAAI7B,CAAC,GAAG6B,eAAe,CAAC,EAAD,EAAK,GAAL,CAAvB;AACA,UAAIC,IAAI,GAAGD,eAAe,CAAC,EAAD,EAAK,EAAL,CAA1B;AAEA,UAAIE,YAAY,GAAGF,eAAe,CAAC,CAAD,EAAI,CAAJ,CAAlC;AAGA,UAAIG,KAAK,GAAGrF,MAAM,CAACiC,SAAP,CAAiBmB,CAAjB,EAAoBC,CAApB,EAAuB8B,IAAvB,EAA6BA,IAA7B,EAAmC;AAC3C5E,QAAAA,MAAM,EAAE;AACJ+E,UAAAA,MAAM,EAAE;AACJC,YAAAA,OAAO,EAAE,qBADL;AAEJC,YAAAA,MAAM,EAAE,EAFJ;AAGJC,YAAAA,MAAM,EAAE;AAHJ;AADJ,SADmC;AAQ3CjC,QAAAA,EAAE,EAAE7D,SAAS,CAAC2D,CAAD;AAR8B,OAAnC,CAAZ;AAWAvD,MAAAA,KAAK,CAAC2C,GAAN,CAAUpC,MAAM,CAACqC,KAAjB,EAAwB,CAAC0C,KAAD,CAAxB;AACA5E,MAAAA,MAAM,CAACA,MAAM,CAACmE,MAAR,CAAN,GAAwBS,KAAxB;AACH;AACJ;;AArJ6B;;AAwJlC,SAASH,eAAT,CAAyBQ,GAAzB,EAA8BC,GAA9B,EAAmC;AAC/B,SAAOC,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACH;;AAED,SAAStB,UAAT,GAAsB;AAClB,OAAK,IAAId,CAAT,IAAc7C,MAAd,EAAsB;AAClB,QAAI4E,KAAK,GAAG5E,MAAM,CAAC6C,CAAD,CAAlB;AACArD,IAAAA,IAAI,CAAC6F,UAAL,CAAgBT,KAAhB,EAAuB;AAACjC,MAAAA,CAAC,EAAE,CAAE,GAAN;AAAWC,MAAAA,CAAC,EAAEzB,MAAM,CAACG,WAAP,GAAqB;AAAnC,KAAvB,EAAgE;AAACqB,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE,CAAC;AAAb,KAAhE;AACH;AACJ;;AAED,eAAe3C,GAAf","sourcesContent":["import React, { createElement } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport Matter from \"matter-js\";\n\nconst monday = mondaySdk();\nvar completed = [];\nvar completed_state = \"Done\";\n\n// module aliases\nvar Engine = Matter.Engine,\nRender = Matter.Render,\nWorld = Matter.World,\nBodies = Matter.Bodies,\nBody = Matter.Body,\nEvents = Matter.Events,\nRunner = Matter.Runner,\nMouseConstraint = Matter.MouseConstraint,\nMouse = Matter.Mouse;\n\nvar engine,\nrender,\nrunner;\n\nvar crates = [];\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Default state\n        this.state = {\n            settings: {\n                completed_state: \"Done\"\n            },\n            name: \"\",\n        };\n    }\n\n    componentDidMount() {\n\n        engine = Engine.create();\n        runner = Runner.create();\n\n        // create a renderer\n        render = Render.create({\n            element: this.refs.launch_site,\n            engine: engine,\n            options: {\n                hasBounds: true,\n                wireframes: false,\n                background: '#fff',\n                showIds: true,\n                width: window.innerWidth,\n                height: window.innerHeight - 100\n            }\n        });\n\n\n        var ground = Bodies.rectangle(window.innerWidth / 2 - 250, window.innerHeight - 100, window.innerWidth + 500, 20, { \n            isStatic: true,\n            render: { fillStyle: '#fff' }\n        });\n\n        var mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(engine, {\n            mouse: mouse,\n            constraint: {\n                stiffness: 0.2,\n                render: {\n                    visible: false\n                }\n            }\n        });\n\n        World.add(engine.world, [ground, mouseConstraint]);\n        Engine.run(engine);\n        Render.run(render);\n\n\n        // an example of using mouse events on a mouse\n        Events.on(mouseConstraint, 'mousedown', function(event) {\n            var mousePosition = event.mouse.position;\n            var cratesUnderMouse = Matter.Query.point(crates, {x: mousePosition.x, y: mousePosition.y});\n            for (let i in cratesUnderMouse) {\n                alert(cratesUnderMouse[i].id);\n            }\n        });\n\n        Events.on(runner, 'tick', function(event) {\n            alert(\"djgdøkfjgn\");\n        });\n\n        //Load boards listener\n         monday.listen(\"context\", res => {\n            this.setState({context: res.data});\n\n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name column_values { title text } } } }`,\n              { variables: {boardIds: this.state.context.boardIds} }\n            )\n\n            .then(res => {\n                this.setState({boardData: res.data});\n                this.loadCompleted();\n            });\n          })\n\n        // Settings changed listener\n        monday.listen(\"settings\", res => {\n            this.setState({ settings: res.data });\n            completed_state = this.state.settings.completed_state;\n\n             this.loadCompleted();\n        });\n    }\n\n    render() {\n        return <div className=\"App\" ref=\"launch_site\">\n            <div className=\"launchDiv\">\n                <p className=\"launchTitle\" id=\"title\"></p>\n                <button onClick={moveCrates} className=\"launchButton\">Launch now</button>\n            </div>\n        </div>;\n    }\n\n    /** Loads completed items into the completed array */\n    loadCompleted() {\n\n        completed = [];\n        for (let i in this.state.boardData.boards) {\n            for (let j in this.state.boardData.boards[i].items) {\n\n                var itemName = this.state.boardData.boards[i].items[j].name;\n\n                for (let k in this.state.boardData.boards[i].items[j].column_values) {\n                    if (this.state.boardData.boards[i].items[j].column_values[k].text === completed_state) {\n\n                        completed[completed.length] = itemName;\n                    }\n                }   \n            }\n        }\n        document.getElementById(\"title\").innerHTML = completed.length + \" items ready to launch!\";\n        this.createBoxes();\n    }\n\n    /** Creates crates based on data in the completed array */\n    createBoxes() {\n        for (let i in crates) {\n            World.remove(engine.world, crates[i]);\n        }\n        crates = [];\n        for (let i in completed) {\n\n            let x = getRandomNumber(200, 400);\n            let y = getRandomNumber(50, 400);\n            let size = getRandomNumber(50, 80);\n\n            let spriteNumber = getRandomNumber(1, 8);\n\n\n            let crate = Bodies.rectangle(x, y, size, size, {\n                render: {\n                    sprite: {\n                        texture: 'sprites/crate_1.png',\n                        xScale: 50,\n                        yScale: 50\n                    }\n                },\n                id: completed[i],\n            });\n            \n            World.add(engine.world, [crate]);\n            crates[crates.length] = crate;\n        }\n    }\n}\n\nfunction getRandomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction moveCrates() {\n    for (let i in crates) {\n        let crate = crates[i];\n        Body.applyForce(crate, {x: - 100, y: window.innerHeight + 100}, {x: 0.3, y: -0.35});\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}