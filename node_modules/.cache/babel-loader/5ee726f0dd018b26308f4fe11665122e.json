{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vebj\\xF8rn\\\\Documents\\\\Monday\\\\quickstart-react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\nvar completed = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      settings: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    monday.storage.instance.getItem('completed').then(res => {\n      completed = res.data.value;\n    });\n\n    if (completed == null) {\n      completed = 0;\n    }\n\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n        var i = 0;\n\n        for (i in this.state.boardData.boards) {\n          monday.execute(\"notice\", {\n            message: JSON.stringify(this.state.boardData.boards[i].items, null, 2),\n            type: \"info\",\n            timeout: 1000\n          });\n        }\n      });\n    });\n    monday.listen(\"events\", res => {\n      completed++;\n      monday.execute(\"notice\", {\n        message: \"Completed: \" + completed,\n        type: \"info\",\n        timeout: 1000\n      });\n      document.getElementById(\"title\").innerHTML = completed;\n      monday.storage.instance.setItem(\"completed\", completed);\n    }, {\n      type: \"change_column_value\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    }, JSON.stringify(this.state.boardData, null, 2));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VebjÃ¸rn/Documents/Monday/quickstart-react/src/App.js"],"names":["React","mondaySdk","monday","completed","App","Component","constructor","props","state","settings","name","componentDidMount","storage","instance","getItem","then","res","data","value","listen","setState","context","api","variables","boardIds","boardData","i","boards","execute","message","JSON","stringify","items","type","timeout","document","getElementById","innerHTML","setItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,MAAMC,MAAM,GAAGD,SAAS,EAAxB;AACA,IAAIE,SAAS,GAAG,CAAhB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,MAAM,CAACU,OAAP,CAAeC,QAAf,CAAwBC,OAAxB,CAAgC,WAAhC,EAA6CC,IAA7C,CAAkDC,GAAG,IAAI;AACrDb,MAAAA,SAAS,GAAGa,GAAG,CAACC,IAAJ,CAASC,KAArB;AACF,KAFF;;AAGC,QAAIf,SAAS,IAAI,IAAjB,EAAuB;AAAEA,MAAAA,SAAS,GAAG,CAAZ;AAAgB;;AAEzCD,IAAAA,MAAM,CAACiB,MAAP,CAAc,SAAd,EAAyBH,GAAG,IAAI;AAC7B,WAAKI,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEL,GAAG,CAACC;AAAd,OAAd;AAEAf,MAAAA,MAAM,CAACoB,GAAP,CAAY,mHAAZ,EACE;AAAEC,QAAAA,SAAS,EAAE;AAACC,UAAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWa,OAAX,CAAmBG;AAA9B;AAAb,OADF,EAGCT,IAHD,CAGMC,GAAG,IAAI;AACX,aAAKI,QAAL,CAAc;AAACK,UAAAA,SAAS,EAAET,GAAG,CAACC;AAAhB,SAAd;AACA,YAAIS,CAAC,GAAG,CAAR;;AACA,aAAKA,CAAL,IAAU,KAAKlB,KAAL,CAAWiB,SAAX,CAAqBE,MAA/B,EAAuC;AACrCzB,UAAAA,MAAM,CAAC0B,OAAP,CAAe,QAAf,EAAyB;AACrBC,YAAAA,OAAO,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKvB,KAAL,CAAWiB,SAAX,CAAqBE,MAArB,CAA4BD,CAA5B,EAA+BM,KAA9C,EAAqD,IAArD,EAA2D,CAA3D,CADY;AAErBC,YAAAA,IAAI,EAAE,MAFe;AAGrBC,YAAAA,OAAO,EAAE;AAHY,WAAzB;AAKD;AACF,OAbD;AAcD,KAjBF;AAmBDhC,IAAAA,MAAM,CAACiB,MAAP,CAAc,QAAd,EAAyBH,GAAD,IAAS;AAC7Bb,MAAAA,SAAS;AACTD,MAAAA,MAAM,CAAC0B,OAAP,CAAe,QAAf,EAAyB;AACrBC,QAAAA,OAAO,EAAE,gBAAgB1B,SADJ;AAErB8B,QAAAA,IAAI,EAAE,MAFe;AAGrBC,QAAAA,OAAO,EAAE;AAHY,OAAzB;AAKAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6ClC,SAA7C;AAEAD,MAAAA,MAAM,CAACU,OAAP,CAAeC,QAAf,CAAwByB,OAAxB,CAAgC,WAAhC,EAA6CnC,SAA7C;AACH,KAVD,EAWA;AAAE8B,MAAAA,IAAI,EAAE;AAAR,KAXA;AAaH;;AAEDM,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFT,IAAI,CAACC,SAAL,CAAe,KAAKvB,KAAL,CAAWiB,SAA1B,EAAqC,IAArC,EAA2C,CAA3C,CADE,CAAP;AAGH;;AAvD6B;;AA0DlC,eAAerB,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\n\nconst monday = mondaySdk();\nvar completed = 0;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Default state\n        this.state = {\n            settings: {},\n            name: \"\",\n        };\n    }\n\n    componentDidMount() {\n        monday.storage.instance.getItem('completed').then(res => {\n            completed = res.data.value;\n         });\n         if (completed == null) { completed = 0; }\n\n         monday.listen(\"context\", res => {\n            this.setState({context: res.data});\n            \n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`,\n              { variables: {boardIds: this.state.context.boardIds} }\n            )\n            .then(res => {\n              this.setState({boardData: res.data});\n              var i = 0;\n              for (i in this.state.boardData.boards) {\n                monday.execute(\"notice\", {\n                    message: JSON.stringify(this.state.boardData.boards[i].items, null, 2),\n                    type: \"info\",\n                    timeout: 1000,\n                });\n              }\n            });\n          })\n\n        monday.listen(\"events\", (res) => {\n            completed++;\n            monday.execute(\"notice\", {\n                message: \"Completed: \" + completed,\n                type: \"info\",\n                timeout: 1000,\n            });\n            document.getElementById(\"title\").innerHTML = completed;\n\n            monday.storage.instance.setItem(\"completed\", completed);\n        },\n        { type: \"change_column_value\" }\n        );\n    }\n\n    render() {\n        return <div className=\"App\" id=\"title\">\n            {JSON.stringify(this.state.boardData, null, 2)} \n        </div>;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}