{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vebj\\xF8rn\\\\Documents\\\\Monday\\\\quickstart-react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\nvar completed = 0;\nvar completedItems = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      settings: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      var done = this.state.settings.done;\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        }); //Load completed tasks\n\n        for (var i in this.state.boardData.boards) {\n          for (var j in this.state.boardData.boards[i].items) {\n            var itemName = this.state.boardData.boards[i].items[j].name;\n\n            for (var k in this.state.boardData.boards[i].items[j].column_values) {\n              if (this.state.boardData.boards[i].items[j].column_values[k].text == done) {\n                completedItems[completedItems.length] = itemName;\n                completed++;\n              }\n            }\n          }\n        }\n\n        document.getElementById(\"title\").innerHTML = JSON.stringify(completedItems);\n      });\n    });\n    monday.listen(\"events\", res => {\n      monday.execute(\"notice\", {\n        message: JSON.stringify(res.data),\n        type: \"info\",\n        timeout: 1000\n      });\n      completed++;\n    }, {\n      type: \"change_column_value\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VebjÃ¸rn/Documents/Monday/quickstart-react/src/App.js"],"names":["React","mondaySdk","monday","completed","completedItems","App","Component","constructor","props","state","settings","name","componentDidMount","listen","res","setState","context","data","done","api","variables","boardIds","then","boardData","i","boards","j","items","itemName","k","column_values","text","length","document","getElementById","innerHTML","JSON","stringify","execute","message","type","timeout","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\n\nconst monday = mondaySdk();\nvar completed = 0;\n\nvar completedItems = [];\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Default state\n        this.state = {\n            settings: {},\n            name: \"\",\n        };\n    }\n\n    componentDidMount() {\n\n         monday.listen(\"context\", res => {\n            this.setState({context: res.data});\n\n            var done = this.state.settings.done;\n\n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name column_values { title text } } } }`,\n              { variables: {boardIds: this.state.context.boardIds} }\n            )\n\n            .then(res => {\n                this.setState({boardData: res.data});\n                //Load completed tasks\n                for (var i in this.state.boardData.boards) {\n                    for (var j in this.state.boardData.boards[i].items) {\n\n                        var itemName = this.state.boardData.boards[i].items[j].name;\n\n                        for (var k in this.state.boardData.boards[i].items[j].column_values) {\n                            if (this.state.boardData.boards[i].items[j].column_values[k].text == done) {\n\n                                completedItems[completedItems.length] = itemName;\n                                completed++;\n                            }\n                        }   \n                    }\n                }\n                document.getElementById(\"title\").innerHTML = JSON.stringify(completedItems);\n            });\n          })\n\n        monday.listen(\"events\", (res) => {\n            monday.execute(\"notice\", {\n                message: JSON.stringify(res.data),\n                type: \"info\",\n                timeout: 1000,\n            });\n            completed++;\n\n        },\n        { type: \"change_column_value\" }\n        );\n    }\n\n    render() {\n        return <div className=\"App\" id=\"title\"></div>;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}