{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vebj\\xF8rn\\\\Documents\\\\Monday\\\\quickstart-react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\nvar completed = [];\nvar completed_state = \"Done\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      settings: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //Load boards listener\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      completed_state = this.state.settings.completed_state;\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n        this.loadCompleted();\n      });\n    }); // Settings changed listener\n\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n      completed_state = this.state.settings.completed_state;\n      monday.execute(\"notice\", {\n        message: completed_state,\n        type: \"success\",\n        // or \"error\" (red), or \"info\" (blue)\n        timeout: 500\n      });\n      this.loadCompleted;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    });\n  }\n\n  loadCompleted() {\n    completed;\n\n    for (var i in this.state.boardData.boards) {\n      for (var j in this.state.boardData.boards[i].items) {\n        var itemName = this.state.boardData.boards[i].items[j].name;\n\n        for (var k in this.state.boardData.boards[i].items[j].column_values) {\n          if (this.state.boardData.boards[i].items[j].column_values[k].text == completed_state) {\n            completed[completed.length] = itemName;\n          }\n        }\n      }\n    }\n\n    document.getElementById(\"title\").innerHTML = JSON.stringify(completedItems);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VebjÃ¸rn/Documents/Monday/quickstart-react/src/App.js"],"names":["React","mondaySdk","monday","completed","completed_state","App","Component","constructor","props","state","settings","name","componentDidMount","listen","res","setState","context","data","api","variables","boardIds","then","boardData","loadCompleted","execute","message","type","timeout","render","i","boards","j","items","itemName","k","column_values","text","length","document","getElementById","innerHTML","JSON","stringify","completedItems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\n\nconst monday = mondaySdk();\nvar completed = [];\nvar completed_state = \"Done\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Default state\n        this.state = {\n            settings: {},\n            name: \"\",\n        };\n    }\n\n    componentDidMount() {\n\n        //Load boards listener\n         monday.listen(\"context\", res => {\n            this.setState({context: res.data});\n\n            completed_state = this.state.settings.completed_state;\n\n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items { name column_values { title text } } } }`,\n              { variables: {boardIds: this.state.context.boardIds} }\n            )\n\n            .then(res => {\n                this.setState({boardData: res.data});\n                this.loadCompleted();\n            });\n          })\n\n        // Settings changed listener\n        monday.listen(\"settings\", res => {\n            this.setState({ settings: res.data });\n            completed_state = this.state.settings.completed_state;\n\n            monday.execute(\"notice\", { \n                message: completed_state,\n                type: \"success\", // or \"error\" (red), or \"info\" (blue)\n                timeout: 500,\n             });\n             this.loadCompleted;\n        });\n    }\n\n    render() {\n        return <div className=\"App\" id=\"title\"></div>;\n    }\n\n    loadCompleted() {\n        completed\n        for (var i in this.state.boardData.boards) {\n            for (var j in this.state.boardData.boards[i].items) {\n\n                var itemName = this.state.boardData.boards[i].items[j].name;\n\n                for (var k in this.state.boardData.boards[i].items[j].column_values) {\n                    if (this.state.boardData.boards[i].items[j].column_values[k].text == completed_state) {\n\n                        completed[completed.length] = itemName;\n                    }\n                }   \n            }\n        }\n        document.getElementById(\"title\").innerHTML = JSON.stringify(completedItems);\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}