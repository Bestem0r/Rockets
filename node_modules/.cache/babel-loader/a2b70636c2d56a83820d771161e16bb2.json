{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vebj\\xF8rn\\\\Documents\\\\Monday\\\\quickstart-react\\\\src\\\\App.js\";\nimport React, { createElement } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport Matter from \"matter-js\";\nconst monday = mondaySdk();\nvar completedIDs = []; // module aliases\n\nvar Engine = Matter.Engine,\n    Render = Matter.Render,\n    World = Matter.World,\n    Bodies = Matter.Bodies,\n    Events = Matter.Events,\n    MouseConstraint = Matter.MouseConstraint,\n    Mouse = Matter.Mouse;\nvar engine, render;\nvar crates = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.getContext = res => {\n      this.setState({\n        context: res.data\n      });\n      this.loadCompletedItems();\n    };\n\n    this.getSettings = res => {\n      this.setState({\n        settings: res.data\n      });\n      this.loadCompletedItems();\n    };\n\n    this.loadCompletedItems = () => {\n      for (let i in this.state.context.boardIds) {\n        monday.api(`query ($completedState: String!, $boardID: Int!) { items_by_column_values (board_id: $boardID, column_id: \"status\", column_value: $completedState) { name id } }`, {\n          variables: {\n            completedState: this.state.settings.completed_state,\n            boardID: this.state.context.boardIds[i]\n          }\n        }).then(res => {\n          clearCrates();\n\n          for (let i in res.data.items_by_column_values) {\n            this.createBox(res.data.items_by_column_values[i].name);\n            completedIDs[completedIDs.length] = res.data.items_by_column_values[i].id;\n          }\n\n          this.setState({\n            info_text: completedIDs.length + \" items ready to launch\"\n          });\n        });\n      }\n    };\n\n    this.setupMatterJS = () => {\n      engine = Engine.create(document.getElementById(\"crates_div\")); // create a renderer\n\n      render = Render.create({\n        element: this.refs.launch_site,\n        engine: engine,\n        options: {\n          wireframes: false,\n          background: '#fff',\n          width: window.innerWidth,\n          height: window.innerHeight - 100\n        }\n      });\n      var ground = Bodies.rectangle(window.innerWidth / 2 - 250, window.innerHeight - 100, window.innerWidth + 500, 20, {\n        isStatic: true,\n        render: {\n          fillStyle: '#fff'\n        }\n      });\n      var mouse = Mouse.create(render.canvas),\n          mouseConstraint = MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false\n          }\n        }\n      });\n      World.add(engine.world, [ground, mouseConstraint]);\n      Engine.run(engine);\n      Render.run(render);\n      Events.on(engine, 'tick', () => {\n        var mousePosition = mouse.position;\n        var cratesUnderMouse = Matter.Query.point(crates, {\n          x: mousePosition.x,\n          y: mousePosition.y\n        });\n        const label = document.getElementById(\"hover_label\");\n\n        if (cratesUnderMouse.length > 0) {\n          let crate = cratesUnderMouse[0];\n          label.innerHTML = crate.id;\n          let labelHeight = label.clientHeight + 1;\n          let labelWidth = label.clientWidth + 1;\n          label.style.top = crate.position.y - 2 - labelHeight + \"px\";\n          label.style.left = crate.position.x - labelWidth / 2 + \"px\";\n          label.style.opacity = 1;\n        } else {\n          label.style.opacity = 0;\n        }\n      });\n    };\n\n    this.prepareLaunch = () => {\n      monday.execute(\"confirm\", {\n        message: \"Are you sure?\\n This will launch all completed items off the earth's atmosphere to the archive!\",\n        confirmButton: \"Launch!\",\n        cancelButton: \"Cancel\",\n        excludeCancelButton: false\n      }).then(res => {\n        if (res.data.confirm) {\n          clearCrates();\n          var rocketContainer = document.getElementById(\"rocketContainer\");\n          var launchButton = document.getElementById(\"launchButton\");\n          launchButton.classList.add(\"countdown\");\n          rocketContainer.style.display = \"block\";\n          this.setState({\n            info_text: \"Rocket launching in...\"\n          });\n          var count = 3;\n          countDown(count);\n\n          function countDown(i) {\n            launchButton.innerHTML = i;\n            setTimeout(() => {\n              i--;\n\n              if (i >= 0) {\n                countDown(i);\n              } else {\n                launch();\n              }\n            }, 1000);\n          }\n        }\n      });\n    };\n\n    this.state = {\n      info_text: \"\",\n      button_text: \"Launch Now!\",\n      settings: {\n        completed_state: \"Done\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupMatterJS(); //Load boards listener\n\n    monday.listen(\"context\", this.getContext); // Settings changed listener\n\n    monday.listen(\"settings\", this.getSettings);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      ref: \"launch_site\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"hover_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Hover\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crates_div\",\n      id: \"cratesDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"launchTitle\",\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, this.state.info_text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"launchButton\",\n      onClick: this.prepareLaunch,\n      className: \"launchButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.state.button_text))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"rocketContainer\",\n      className: \"rocket_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"rocket\",\n      id: \"rocket\",\n      src: \"sprites/mocket.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })));\n  }\n  /** Creates a new box/crate */\n\n\n  createBox(name) {\n    let x = getRandomInt(200, 800);\n    let y = getRandomInt(50, 400);\n    let size = getRandomInt(50, 70);\n    let crate = Bodies.rectangle(x, y, size, size, {\n      render: {\n        sprite: {\n          texture: \"/sprites/crate.png\",\n          xScale: size / 475,\n          yScale: size / 475\n        }\n      },\n      id: name\n    });\n    World.add(engine.world, [crate]);\n    crates[crates.length] = crate;\n  }\n\n}\n\nfunction createParticle(x, y) {\n  const particle = document.createElement(\"div\");\n  particle.classList.add(\"particle\");\n  particle.style.transform = \"rotate(45deg)\";\n  const sizeY = Math.floor(Math.random() * 5) + 5;\n  const sizeX = (Math.random() + 1) * sizeY;\n  const ptAngle = Math.random() * 2 * Math.PI;\n  const originX = x;\n  const originY = y;\n  particle.style.width = sizeX + \"px\";\n  particle.style.height = sizeY + \"px\";\n  const radius = Math.random() * 400;\n  const pt_radius_sq = Math.random() * radius * radius;\n  const destinationX = originX + Math.sqrt(pt_radius_sq * 3) * Math.cos(ptAngle);\n  const destinationY = originY + Math.sqrt(pt_radius_sq) * Math.sin(ptAngle);\n  const newAngle = Math.round(angle(originX, originY, destinationX, destinationY));\n  var rocket = document.getElementById(\"rocket\");\n  rocket.appendChild(particle);\n  const animation = particle.animate([{\n    transform: \"translate(-50%, -50%) translate(\" + originX + \"px, \" + originY + \"px) rotate(\" + newAngle + \"deg)\",\n    opacity: 1\n  }, {\n    transform: \"translate(\" + destinationX + \"px,\" + destinationY + \"px) rotate(\" + newAngle + \"deg)\",\n    opacity: 1\n  }], {\n    duration: Math.random() * 1000 + 1000,\n    easing: \"cubic-bezier(.05,.58,.33,1)\",\n    delay: Math.random() * 200\n  });\n\n  animation.onfinish = () => {\n    particle.remove();\n  };\n}\n\nfunction angle(cx, cy, ex, ey) {\n  var dy = ey - cy;\n  var dx = ex - cx;\n  var theta = Math.atan2(dy, dx);\n  theta *= 180 / Math.PI;\n  return theta;\n}\n\nfunction launch() {\n  var rocket = document.getElementById(\"rocket\");\n  rocket.style.animation = \"shake 0.3s infinite\";\n  rocket.style.marginBottom = window.outerHeight + \"px\";\n\n  for (let i = 0; i < 100; i++) {\n    setTimeout(() => {\n      createParticle(0, 0);\n    }, 100 * i);\n  }\n\n  deleteCompleted();\n}\n\nfunction deleteCompleted() {\n  for (let i in completedIDs) {\n    let itemID = parseInt(completedIDs[i]);\n    monday.api(`mutation ($itemID: Int) { archive_item (item_id: $itemID) { id } }`, {\n      variables: {\n        itemID: itemID\n      }\n    });\n  }\n}\n\nfunction clearCrates() {\n  for (let i in crates) {\n    World.remove(engine.world, crates[i]);\n  }\n\n  crates = [];\n  completedIDs = [];\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Vebjørn/Documents/Monday/quickstart-react/src/App.js"],"names":["React","createElement","mondaySdk","Matter","monday","completedIDs","Engine","Render","World","Bodies","Events","MouseConstraint","Mouse","engine","render","crates","App","Component","constructor","props","getContext","res","setState","context","data","loadCompletedItems","getSettings","settings","i","state","boardIds","api","variables","completedState","completed_state","boardID","then","clearCrates","items_by_column_values","createBox","name","length","id","info_text","setupMatterJS","create","document","getElementById","element","refs","launch_site","options","wireframes","background","width","window","innerWidth","height","innerHeight","ground","rectangle","isStatic","fillStyle","mouse","canvas","mouseConstraint","constraint","stiffness","visible","add","world","run","on","mousePosition","position","cratesUnderMouse","Query","point","x","y","label","crate","innerHTML","labelHeight","clientHeight","labelWidth","clientWidth","style","top","left","opacity","prepareLaunch","execute","message","confirmButton","cancelButton","excludeCancelButton","confirm","rocketContainer","launchButton","classList","display","count","countDown","setTimeout","launch","button_text","componentDidMount","listen","getRandomInt","size","sprite","texture","xScale","yScale","createParticle","particle","transform","sizeY","Math","floor","random","sizeX","ptAngle","PI","originX","originY","radius","pt_radius_sq","destinationX","sqrt","cos","destinationY","sin","newAngle","round","angle","rocket","appendChild","animation","animate","duration","easing","delay","onfinish","remove","cx","cy","ex","ey","dy","dx","theta","atan2","marginBottom","outerHeight","deleteCompleted","itemID","parseInt","min","max","ceil"],"mappings":"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","sourcesContent":["import React, { createElement } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport Matter from \"matter-js\";\n\nconst monday = mondaySdk();\nvar completedIDs = [];\n\n// module aliases\nvar Engine = Matter.Engine,\nRender = Matter.Render,\nWorld = Matter.World,\nBodies = Matter.Bodies,\nEvents = Matter.Events,\nMouseConstraint = Matter.MouseConstraint,\nMouse = Matter.Mouse;\n\nvar engine,\nrender;\nvar crates = [];\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // Default state\n        this.state = {\n            info_text: \"\",\n            button_text: \"Launch Now!\",\n            settings: {\n                completed_state: \"Done\"\n            },\n        };\n    }\n\n    componentDidMount() {\n        \n        this.setupMatterJS();\n\n        //Load boards listener\n         monday.listen(\"context\", this.getContext)\n\n        // Settings changed listener\n        monday.listen(\"settings\", this.getSettings);\n    }\n\n    getContext = (res) => {\n        this.setState({context: res.data});\n        this.loadCompletedItems();\n    }\n\n    getSettings = (res) => {\n        this.setState({ settings: res.data });\n        this.loadCompletedItems();\n    }\n\n    loadCompletedItems = () => {\n        for (let i in this.state.context.boardIds) {\n            monday.api(`query ($completedState: String!, $boardID: Int!) { items_by_column_values (board_id: $boardID, column_id: \"status\", column_value: $completedState) { name id } }`, {\n                    variables: {completedState: this.state.settings.completed_state, boardID: this.state.context.boardIds[i]}\n                })\n                .then(res => {\n                    clearCrates();\n                    for (let i in res.data.items_by_column_values) {\n                        this.createBox(res.data.items_by_column_values[i].name);\n                        completedIDs[completedIDs.length] = res.data.items_by_column_values[i].id;\n                    }\n                    this.setState({info_text: completedIDs.length + \" items ready to launch\"})\n            });\n        }\n    }\n\n    render() {\n        return <div className=\"App\" ref=\"launch_site\">\n            <p id=\"hover_label\">Hover</p>\n            <div className=\"crates_div\" id=\"cratesDiv\">\n                <p className=\"launchTitle\" id=\"title\">{this.state.info_text}</p>\n                <div className=\"button_container\">\n                    <button id=\"launchButton\" onClick={this.prepareLaunch} className=\"launchButton\">{this.state.button_text}</button>\n                </div>\n            </div>\n            <div id=\"rocketContainer\" className=\"rocket_container\">\n                <img className=\"rocket\" id=\"rocket\" src=\"sprites/mocket.png\"></img>\n            </div>\n        </div>;\n    }\n\n    /** Creates a new box/crate */\n    createBox(name) {\n        let x = getRandomInt(200, 800);\n        let y = getRandomInt(50, 400);\n        let size = getRandomInt(50, 70);\n\n        let crate = Bodies.rectangle(x, y, size, size, {\n            render: {\n                sprite: {\n                    texture: \"/sprites/crate.png\",\n                    xScale: size / 475,\n                    yScale: size / 475 } },\n            id: name\n        });\n            \n        World.add(engine.world, [crate]);\n        crates[crates.length] = crate;\n    }\n\n    setupMatterJS = () => {\n        engine = Engine.create(document.getElementById(\"crates_div\"));\n\n        // create a renderer\n        render = Render.create({\n            element: this.refs.launch_site,\n            engine: engine,\n            options: {\n                wireframes: false,\n                background: '#fff',\n                width: window.innerWidth,\n                height: window.innerHeight - 100\n            }\n        });\n\n        var ground = Bodies.rectangle(window.innerWidth / 2 - 250, window.innerHeight - 100, window.innerWidth + 500, 20, { \n            isStatic: true,\n            render: { fillStyle: '#fff' }\n        });\n\n        var mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(engine, {\n            mouse: mouse,\n            constraint: {\n                stiffness: 0.2,\n                render: { visible: false }\n            }\n        });\n\n        World.add(engine.world, [ground, mouseConstraint]);\n        Engine.run(engine);\n        Render.run(render);\n    \n        Events.on(engine, 'tick', () => {\n            var mousePosition = mouse.position;\n            var cratesUnderMouse = Matter.Query.point(crates, {x: mousePosition.x, y: mousePosition.y});\n            \n            const label = document.getElementById(\"hover_label\");\n            if (cratesUnderMouse.length > 0) {\n                let crate = cratesUnderMouse[0];\n                label.innerHTML = crate.id;\n                let labelHeight = (label.clientHeight + 1);\n                let labelWidth = (label.clientWidth + 1);\n                label.style.top = crate.position.y - 2 - labelHeight + \"px\";\n                label.style.left = crate.position.x - labelWidth / 2 + \"px\";\n                label.style.opacity = 1;\n            } else {\n                label.style.opacity = 0;\n            }\n        });\n    }\n\n    prepareLaunch = () => {\n        monday.execute(\"confirm\", {\n            message: \"Are you sure?\\n This will launch all completed items off the earth's atmosphere to the archive!\", \n            confirmButton: \"Launch!\", \n            cancelButton: \"Cancel\", \n            excludeCancelButton: false\n         }).then((res) => {\n\n             if (res.data.confirm) {\n                clearCrates();\n                var rocketContainer = document.getElementById(\"rocketContainer\");\n                var launchButton = document.getElementById(\"launchButton\");\n\n                launchButton.classList.add(\"countdown\");\n                rocketContainer.style.display = \"block\";\n                this.setState({info_text: \"Rocket launching in...\"})\n\n                var count = 3;\n                countDown(count);\n                function countDown(i) {\n                    launchButton.innerHTML = i;\n                    setTimeout(() => {\n                        i --;\n                        if (i >= 0) {\n                            countDown(i);\n                        } else {\n                            launch();\n                        }\n                    }, 1000);\n                }\n             }\n         });\n    }\n}\n\nfunction createParticle(x, y) {\n    const particle = document.createElement(\"div\");\n    particle.classList.add(\"particle\");\n\n    particle.style.transform = \"rotate(45deg)\";\n\n    const sizeY = Math.floor(Math.random() * 5) + 5;\n    const sizeX = (Math.random() + 1) * sizeY;\n    const ptAngle = Math.random() * 2 * Math.PI;\n\n    const originX = x;\n    const originY = y;\n\n    particle.style.width = sizeX + \"px\";\n    particle.style.height = sizeY + \"px\";\n\n    const radius = Math.random() * 400;\n    const pt_radius_sq = Math.random() * radius * radius;\n    const destinationX = originX + Math.sqrt(pt_radius_sq * 3) * Math.cos(ptAngle);\n    const destinationY = originY + Math.sqrt(pt_radius_sq) * Math.sin(ptAngle);\n\n    const newAngle = Math.round(angle(originX, originY, destinationX, destinationY));\n\n    var rocket = document.getElementById(\"rocket\");\n    rocket.appendChild(particle);\n\n    const animation = particle.animate(\n        [\n            {\n                transform: \"translate(-50%, -50%) translate(\" + originX + \"px, \" + originY + \"px) rotate(\" + newAngle + \"deg)\",\n                opacity: 1,\n            },\n            {\n                transform: \"translate(\" + destinationX + \"px,\" + destinationY + \"px) rotate(\" + newAngle + \"deg)\",\n                opacity: 1,\n            },\n        ],\n        {\n            duration: Math.random() * 1000 + 1000,\n            easing: \"cubic-bezier(.05,.58,.33,1)\",\n            delay: Math.random() * 200,\n        }\n    );\n\n    animation.onfinish = () => {\n        particle.remove();\n    };\n}\n\nfunction angle(cx, cy, ex, ey) {\n    var dy = ey - cy;\n    var dx = ex - cx;\n    var theta = Math.atan2(dy, dx);\n    theta *= 180 / Math.PI;\n    return theta;\n}\n\nfunction launch() {\n    var rocket = document.getElementById(\"rocket\");\n    rocket.style.animation = \"shake 0.3s infinite\";\n    rocket.style.marginBottom = window.outerHeight + \"px\";\n\n    for (let i = 0; i < 100; i++) {\n        setTimeout(() => {\n            createParticle(0, 0);\n        }, 100 * i);\n    }\n    deleteCompleted();\n}\n    \nfunction deleteCompleted() {\n    for (let i in completedIDs) {\n        let itemID = parseInt(completedIDs[i]);\n        monday.api(`mutation ($itemID: Int) { archive_item (item_id: $itemID) { id } }`, {\n            variables: {itemID: itemID } }\n        );\n    }\n}\n\nfunction clearCrates() {\n    for (let i in crates) { World.remove(engine.world, crates[i]) }\n    crates = [];\n    completedIDs = [];\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}